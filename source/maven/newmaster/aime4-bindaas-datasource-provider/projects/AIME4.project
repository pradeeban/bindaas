{
  "profiles": {
    "AIME4": {
      "dataSource": {
        "username": "username",
        "password": "password",
        "url": "jdbc:db2://localhost:50000/XMLDB",
        "tableName": "table",
        "autoInitialize": true
      },
      "queryEndpoints": {
        "find": {
          "queryTemplate": "XQUERY \ndeclare namespace ns1\u003d\"gme://caCORE.caCORE/4.4/edu.northwestern.radiology.AIM\"; \ndeclare namespace iso\u003d\"uri:iso.org:21090\";\n\nfor $y in db2-fn:xmlcolumn(\"AIMEDS.TEST1.XMLCOLUMN\")/ns1:ImageAnnotationCollection \nwhere ( (exists($y/ns1:user/ns1:name/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$username$\u0027 ) or $y/ns1:user/ns1:name[starts-with(@value,\u0027$username$\u0027)]) \nand ( (exists($y//ns1:ImagingPhysicalEntity/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$anatomicalEntity$\u0027) or $y//ns1:ImagingPhysicalEntity/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$anatomicalEntity$\u0027)])\nand ( (exists($y//ns1:ImagingPhysicalEntityCharacteristic/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$anatomicEntityCharacteristic$\u0027) or $y//ns1:ImagingPhysicalEntityCharacteristic/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$anatomicEntityCharacteristic$\u0027)])\nand ( (exists($y//ns1:ImagingObservationEntity/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$imagingObservationEntity$\u0027) or $y//ns1:ImagingObservationEntity/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$imagingObservationEntity$\u0027)])\nand ( (exists($y//ns1:ImagingObservationCharacteristic/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$imagingObservationEntityCharacteristic$\u0027 ) or $y//ns1:ImagingObservationCharacteristic/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$imagingObservationEntityCharacteristic$\u0027)])\nand ( (exists($y//ns1:ImageAnnotation/ns1:imageReferenceEntityCollection/ns1:ImageReferenceEntity/ns1:imageStudy/ns1:instanceUid/@root) \u003d fn:false() and \u0027\u0027 \u003d \u0027$studyInstanceUID$\u0027 ) or $y//ns1:ImageAnnotation/ns1:imageReferenceEntityCollection/ns1:ImageReferenceEntity/ns1:imageStudy/ns1:instanceUid[starts-with(@root,\u0027$studyInstanceUID$\u0027)])\nand ( (exists($y/ns1:person/ns1:name/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$patientName$\u0027 ) or $y/ns1:person/ns1:name[starts-with(@value,\u0027$patientName$\u0027)])\nand ( (exists($y/ns1:person/ns1:id/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$patientID$\u0027 ) or $y/ns1:person/ns1:id[starts-with(@value,\u0027$patientID$\u0027)])\nand ( (exists($y//ns1:ImageAnnotation/ns1:name/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$annotationName$\u0027 )  or $y//ns1:ImageAnnotation/ns1:name[starts-with(@value,\u0027$annotationName$\u0027)])\nand (boolean(($annotationContainerUID$)) \u003d fn:false() or $y/ns1:uniqueIdentifier/@root \u003d ($annotationContainerUID$) )\nreturn $y   ",
          "metaData": {},
          "tags": [],
          "bindVariables": {
            "username": {
              "name": "username",
              "required": false,
              "defaultValue": "",
              "description": "username"
            },
            "anatomicalEntity": {
              "name": "anatomicalEntity",
              "required": false,
              "defaultValue": "",
              "description": "anatomicalEntity"
            },
            "anatomicEntityCharacteristic": {
              "name": "anatomicEntityCharacteristic",
              "required": false,
              "defaultValue": "",
              "description": "anatomicEntityCharacteristic"
            },
            "imagingObservationEntity": {
              "name": "imagingObservationEntity",
              "required": false,
              "defaultValue": "",
              "description": "imagingObservationEntity"
            },
            "imagingObservationEntityCharacteristic": {
              "name": "imagingObservationEntityCharacteristic",
              "required": false,
              "defaultValue": "",
              "description": "imagingObservationEntityCharacteristic"
            },
            "studyInstanceUID": {
              "name": "studyInstanceUID",
              "required": false,
              "defaultValue": "",
              "description": "studyInstanceUID"
            },
            "patientName": {
              "name": "patientName",
              "required": false,
              "defaultValue": "",
              "description": "patientName"
            },
            "patientID": {
              "name": "patientID",
              "required": false,
              "defaultValue": "",
              "description": "patientID"
            },
            "annotationName": {
              "name": "annotationName",
              "required": false,
              "defaultValue": "",
              "description": "annotationName"
            },
            "annotationContainerUID": {
              "name": "annotationContainerUID",
              "required": false,
              "defaultValue": "",
              "description": "Comma-separated list of annotationContainerUID . MUST be enclosed within single-quotes as in : "
            }
          },
          "stage": "UNVERIFIED",
          "outputFormat": {
            "queryType": "XQUERY",
            "outputFormat": "SIMPLE_JSON_IMAGE_ANNOTATION",
            "csvHeader": [
              "[]"
            ]
          },
          "name": "find",
          "timeCreated": "Fri Sep 06 12:30:10 EDT 2013",
          "createdBy": "admin",
          "description": "Find annotation metadata matching attributes specified         "
        },
        "retrieve": {
          "queryTemplate": "XQUERY \ndeclare namespace ns1\u003d\"gme://caCORE.caCORE/4.4/edu.northwestern.radiology.AIM\"; \ndeclare namespace iso\u003d\"uri:iso.org:21090\";\n\nfor $y in db2-fn:xmlcolumn(\"AIMEDS.TEST1.XMLCOLUMN\")/ns1:ImageAnnotationCollection \nwhere ( (exists($y/ns1:user/ns1:name/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$username$\u0027 ) or $y/ns1:user/ns1:name[starts-with(@value,\u0027$username$\u0027)]) \nand ( (exists($y//ns1:ImagingPhysicalEntity/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$anatomicalEntity$\u0027) or $y//ns1:ImagingPhysicalEntity/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$anatomicalEntity$\u0027)])\nand ( (exists($y//ns1:ImagingPhysicalEntityCharacteristic/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$anatomicEntityCharacteristic$\u0027) or $y//ns1:ImagingPhysicalEntityCharacteristic/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$anatomicEntityCharacteristic$\u0027)])\nand ( (exists($y//ns1:ImagingObservationEntity/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$imagingObservationEntity$\u0027) or $y//ns1:ImagingObservationEntity/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$imagingObservationEntity$\u0027)])\nand ( (exists($y//ns1:ImagingObservationCharacteristic/ns1:typeCode/iso:displayName/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$imagingObservationEntityCharacteristic$\u0027 ) or $y//ns1:ImagingObservationCharacteristic/ns1:typeCode/iso:displayName[starts-with(@value,\u0027$imagingObservationEntityCharacteristic$\u0027)])\nand ( (exists($y//ns1:ImageAnnotation/ns1:imageReferenceEntityCollection/ns1:ImageReferenceEntity/ns1:imageStudy/ns1:instanceUid/@root) \u003d fn:false() and \u0027\u0027 \u003d \u0027$studyInstanceUID$\u0027 ) or $y//ns1:ImageAnnotation/ns1:imageReferenceEntityCollection/ns1:ImageReferenceEntity/ns1:imageStudy/ns1:instanceUid[starts-with(@root,\u0027$studyInstanceUID$\u0027)])\nand ( (exists($y/ns1:person/ns1:name/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$patientName$\u0027 ) or $y/ns1:person/ns1:name[starts-with(@value,\u0027$patientName$\u0027)])\nand ( (exists($y/ns1:person/ns1:id/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$patientID$\u0027 ) or $y/ns1:person/ns1:id[starts-with(@value,\u0027$patientID$\u0027)])\nand ( (exists($y//ns1:ImageAnnotation/ns1:name/@value) \u003d fn:false() and \u0027\u0027 \u003d \u0027$annotationName$\u0027 )  or $y//ns1:ImageAnnotation/ns1:name[starts-with(@value,\u0027$annotationName$\u0027)])\nand (boolean(($annotationContainerUID$)) \u003d fn:false() or $y/ns1:uniqueIdentifier/@root \u003d ($annotationContainerUID$) )\nreturn $y   ",
          "metaData": {},
          "tags": [],
          "bindVariables": {
            "username": {
              "name": "username",
              "required": false,
              "defaultValue": "",
              "description": "username"
            },
            "anatomicalEntity": {
              "name": "anatomicalEntity",
              "required": false,
              "defaultValue": "",
              "description": "anatomicalEntity"
            },
            "anatomicEntityCharacteristic": {
              "name": "anatomicEntityCharacteristic",
              "required": false,
              "defaultValue": "",
              "description": "anatomicEntityCharacteristic"
            },
            "imagingObservationEntity": {
              "name": "imagingObservationEntity",
              "required": false,
              "defaultValue": "",
              "description": "imagingObservationEntity"
            },
            "imagingObservationEntityCharacteristic": {
              "name": "imagingObservationEntityCharacteristic",
              "required": false,
              "defaultValue": "",
              "description": "imagingObservationEntityCharacteristic"
            },
            "studyInstanceUID": {
              "name": "studyInstanceUID",
              "required": false,
              "defaultValue": "",
              "description": "studyInstanceUID"
            },
            "patientName": {
              "name": "patientName",
              "required": false,
              "defaultValue": "",
              "description": "patientName"
            },
            "patientID": {
              "name": "patientID",
              "required": false,
              "defaultValue": "",
              "description": "patientID"
            },
            "annotationName": {
              "name": "annotationName",
              "required": false,
              "defaultValue": "",
              "description": "annotationName"
            },
            "annotationContainerUID": {
              "name": "annotationContainerUID",
              "required": false,
              "defaultValue": "",
              "description": "Comma-separated list of annotationContainerUID . MUST be enclosed within single-quotes as in : "
            }
          },
          "stage": "UNVERIFIED",
          "outputFormat": {
            "queryType": "XQUERY",
            "outputFormat": "XML",
            "csvHeader": [
              "[\"[]\"]"
            ]
          },
          "name": "retrieve",
          "timeCreated": "Fri Sep 06 12:32:54 EDT 2013",
          "createdBy": "admin",
          "description": "Retrieve annotations matching attributes specified      "
        }
      },
      "deleteEndpoints": {
        "byUID": {
          "queryTemplate": "delete from AIMEDS.TEST1 where UNIQUE_ID in ($annotationContainerUID$)",
          "tags": [],
          "bindVariables": {
            "annotationContainerUID": {
              "name": "annotationContainerUID",
              "required": true,
              "defaultValue": "",
              "description": "Comma-separated list of annotationContainerUID to delete . MUST be enclosed within single-quotes as in : \u0027id1\u0027,\u0027id2\u0027 ...."
            }
          },
          "stage": "UNVERIFIED",
          "name": "byUID",
          "timeCreated": "Fri May 10 16:45:54 EDT 2013",
          "createdBy": "admin",
          "description": "Delete by annotationContainerUID"
        }
      },
      "submitEndpoints": {
        "xml": {
          "type": "FORM_DATA",
          "properties": {
            "tableName": "TEST1",
            "inputType": "XML"
          },
          "name": "xml",
          "timeCreated": "Fri May 10 16:45:54 EDT 2013",
          "createdBy": "admin",
          "description": ""
        }
      },
      "providerId": "edu.emory.cci.bindaas.datasource.provider.aime4.AIMEProvider",
      "providerVersion": 1,
      "name": "AIME4",
      "timeCreated": "Mon Oct 21 11:02:49 EDT 2013",
      "createdBy": "admin",
      "description": "AIME based on AIM 4.0 Data Model"
    }
  },
  "params": {},
  "name": "AIME",
  "timeCreated": "Fri May 10 16:43:17 EDT 2013",
  "createdBy": "admin",
  "description": "AIME"
}